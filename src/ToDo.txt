
ARCHITECTURE
- Put queue routines into queue module
- Clean up return codes and error handling
- Data structure with TObject, IDX, shift and mask?

GUI
- Rescan for MIDI devices when user clicks on device lists                   -> Done
- Provide titles for various quadraverb forms                                -> Done
- Disable/enable send/get buttons based on MIDI open status                  -> In prog
- Split EQ panel in 3band, 5band, graphic and preset                         -> Done except preset
- Add graphical indications of config (redraw manual)
- Move resonator panel
- Add global resonator parameters
- Add sampling panel
- Put none tap delay parameters in a group


MIDI
- Resolve code for closing MIDI channels                                     -> Done
- Queue up rx'd messages for processing                                      -> Done
- Process rx'd messages in a seperate thread                                 -> Done but only 1 thread
- Handle messages that span multiple queue entries
- Only list devices that are both input and output                           -> Done

QUADRAVERB
- Check message is from a Quadraverb                                         -> Done
- Extract patch number                                                       -> Done
- Decode contents of message                                                 -> Done
- Check if funtion #'s 0,5 and 6 work for "Program", "Midi" and "Store"      -> Done apart from encoding
- See if we can request and read the ROM version
- Message encoder                                                            -> Done
- Request all patches (handy for testing callback routine)                   -> Done, decode and use
- Read and write raw SYSEX files
- Default values in internal data structure
- Generate and use list of settings that change based on config

- Handle resonator parameters                                                -> In progress
- Handle sampling parameters

Problems:
- MIDI close gets continuous MM_LONGDATA messages
- Program hangs at close (as at V18, V17 ok, V20 worse)
  - To reporoduce:
    - Start program
    - Open MIDI (must have Midi Out and Midi In devices, GS Wavetable (Out) and USB (in) will cause prob.)
    - Exit
    - Program crashed (V18) or hangs (V20)                                   -> Fixed in 48
- Encode routine is wrong                                                    -> Done
- Ensure decode and encode return the correct number of bytes                -> Fixed
- Safety checks on output length in decode and encode routines               -> Done
- Add file and function header documentation
- Properly convert 16bit QuadGT values to internal data structure            -> Done
